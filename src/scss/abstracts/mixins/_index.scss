@use "../variables" as *;
@use "sass:math";
@use "sass:string";

@mixin screen-reader-text($focus: false) {
	border: 0;
	clip-path: inset(50%);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	word-wrap: normal !important;

	@if $focus {
		&:focus {
			@include button;

			clip-path: none;
			height: auto;
			left: 5px;
			top: 5px;
			width: auto;
			z-index: 100000; // Above WP toolbar.
		}
	}
}

@mixin undo-screen-reader-text {
	clip-path: none;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static !important;
	width: 1px;
}

/* https://stackoverflow.com/a/58638675/597678 */

@mixin mq($breakpoint) {
	$value: $breakpoint;
	@if math.is-unitless($breakpoint) {
		$value: calc(($breakpoint / 16) * 1em);
	}

	@media screen and (min-width: $value) {
		@content;
	}
}

/* Note: I haven't been able to find any reports of this, but the string interpolation around calc() feels like a workaround to a sass bug. It may be be necessary in the future */
@mixin cq($breakpoint, $container: null) {
	$value: $breakpoint;
	@if math.is-unitless($breakpoint) {
		$value: calc(($breakpoint / 16) * 1em);
	}
	@container #{$container} (min-width: #{$value}) {
		@content;
	}
}

@mixin mq-max($breakpoint) {
	$value: $breakpoint;
	@if math.is-unitless($breakpoint) {
		$value: calc((($breakpoint - 1) / 16) * 1em);
	}
	@media screen and (max-width: $value) {
		@content;
	}
}

@mixin cq-max($breakpoint, $container: null) {
	$value: $breakpoint;
	@if math.is-unitless($breakpoint) {
		$value: calc((($breakpoint - 1) / 16) * 1em);
	}
	@container #{$container} (max-width: #{$value}) {
		@content;
	}
}

@mixin block-container {
	> * {
		width: $width--content;
		margin-inline: auto;
	}
}

@mixin alignwide {
	max-width: $width--wide;
	margin-block-start: $space-8;

	&:first-child {
		margin-block-start: 0;
	}

	+ * {
		margin-block-start: $space-8;
	}

	@include mq($bp--large) {
		width: 100%;
	}
}

@mixin alignfull {
	width: 100%;
	max-width: none;
	margin-inline: 0;
	margin-block-start: $space-8;

	&:first-child {
		margin-block-start: 0;
	}

	+ * {
		margin-block-start: $space-8;
	}

	+ .alignfull.has-background,
	+ .alignfull.wp-block-cover {
		margin-block-start: 0;
	}
}

@mixin flow($size: 1.5em) {
	> * + * {
		margin-block-start: $size;
	}
}

@mixin button {
	padding: $space-3;
	border-radius: $border-radius;
	border: 2px solid transparent;
	background-color: $primary;
	color: $base;
	text-decoration: none !important;
	transition:
		background-color 0.125s ease-in-out,
		color 0.125s ease-in-out,
		border-color 0.125s ease-in-out;
	cursor: pointer;

	&:hover,
	&:visited,
	&:focus {
		background-color: $secondary;
		color: $base;
	}
}

@mixin button-unset {
	all: unset;
	display: inline-flex;
	align-items: center;
	box-sizing: inherit;
	outline-offset: -0.25rem;
	line-height: 1;
	cursor: pointer;
	transition:
		background-color 0.125s ease-in-out,
		color 0.125s ease-in-out,
		border-color 0.125s ease-in-out;
}
